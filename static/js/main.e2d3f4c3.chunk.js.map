{"version":3,"sources":["components/NavBar.js","components/Review.js","extra/LoginPage.js","pages/Profile.js","components/mapStyles.js","components/HomeMap.js","components/RestroomFavorites.js","components/Restroom.js","components/Filter.js","pages/Home.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","onLogout","localStorage","clear","props","history","push","link","width","padding","margin","background","textDecoration","color","className","to","style","Component","Review","username","review","name","handleChange","e","setState","target","value","handleSubmit","preventDefault","createReview","onSubmit","this","class","onChange","placeholder","type","rows","myReviews","map","Profile","showFavorites","faveSpots","restroom","address","restroom_type","wheelchair_accessible","start_time","end_time","onClick","event","deleteFave","newReview","featureType","elementType","stylers","visibility","lightness","saturation","gamma","hue","WrappedMap","withScriptjs","withGoogleMap","useState","selectedSpot","setSelectedSpot","defaultZoom","defaultCenter","lat","lng","defaultOptions","styles","mapStyles","restrooms","key","id","position","latitude","longitude","icon","url","scaledSize","window","google","maps","Size","animation","Animation","DROP","visible","parseFloat","onCloseClick","addFave","HomeMap","googleMapURL","process","loadingElement","height","containerElement","mapElement","allRestrooms","hovered","RestroomFavorites","React","Restroom","clicked","handleRestroomClick","onMouseMove","console","log","onHover","mapClick","showInfo","handleClick","img","aria-hidden","Filter","radioButton","onClickButton","checked","sortTerm","setSortTerm","Home","xcoordinate","ycoordinate","filterTerm","selectedMarker","favoriteSpot","userAddress","currentProfile","myFaves","term","handleHover","filterSpot","filteredRestrooms","filter","fetch","then","resp","json","data","coordinates","setFilterTerm","About","App","page","redirect","spot","includes","method","headers","Accepts","body","JSON","stringify","user_id","restroom_id","res","favorite","updatedSpots","aSpot","exact","path","render","routerProps","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2d3f4c3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../style/Nav.scss\";\nimport { connect } from \"react-redux\";\n\n// import { getCurrentUser, logOut } from \"../actions/userActions\";\n\nexport default class NavBar extends Component {\n  state ={\n     \n  }\n\n  onLogout = () => {\n    localStorage.clear()\n    this.props.history.push(\"/login\");\n  };\n\n  render() {\n    const link = {\n      width: \"50px\",\n      padding: \"8px\",\n      margin: \"6px 12px 6px\",\n      background: \"purple\",\n      textDecoration: \"none\",\n      color: \"white\"\n    };\n    \n \n    return (\n      <div className=\"navbar\">\n        <div className=\"buttons\">\n          <h2 className=\"title\">NYC Restroom Finder</h2>\n          {/* <NavLink to=\"/login\" style={link}>\n              Login\n            </NavLink> */}\n          <NavLink to=\"/\" style={link}>\n            Home\n          </NavLink>\n          \n          <NavLink to=\"/about\" style={link}>\n            About\n          </NavLink>\n          {/* <NavLink to=\"/data\" style={link}>\n              Data\n            </NavLink> */}\n\n          <NavLink to=\"/profile\" style={link}>\n            Profile\n          </NavLink>\n          {/* <NavLink\n              className=\"nav-link\"\n              style={{ margin: 15 }}\n              onClick={this.onLogout}\n              exact\n              to=\"/home\"\n            >\n              Logout\n            </NavLink> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nclass Review extends Component {\n  state = {\n    username:'',\n    review: '',\n    name:'',\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createReview(this.state)\n  };\n\n  render() {\n    return (\n      <div className=\"reviews-container\">\n        <div className=\"review-form\">\n          <h3>Add a review:</h3>\n          <form onSubmit={this.handleSubmit} class=\"ui form\">\n            <div class=\"six wide field\">\n              <div class=\"field\">\n                <label>Restroom Name</label>\n                <input\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                  placeholder=\"Name\"\n                  type=\"text\"\n                />\n              </div>\n            </div>\n            <div class=\"six wide field\">\n              <div class=\"field\">\n                <label>Review</label>\n                <textarea\n                  name=\"review\"\n                  value={this.state.review}\n                  onChange={this.handleChange}\n                  rows=\"2\"\n                ></textarea>\n              </div>\n            </div>\n            <button class=\"ui button\" type=\"submit\">\n              Submit\n            </button>\n          </form>\n        </div>\n        <div className=\"myreviews\">\n          <h3>My Reviews</h3>\n          <ul className=\"reviewlist\">\n            {this.props.myReviews.map(review => {\n              return (\n                <li>\n                  <div>\n                    <h3 className=\"review-title\">{review.name}</h3>\n                    {review.review}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Review;","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass LoginPage extends Component {\n  state = {\n    username:'',\n    password:''\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // fetch(`http://localhost:3000/login`, {\n      fetch('https://nyc-restrooms-locator-backend.herokuapp.com/login',{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(this.state)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.token) {\n          localStorage.token = data.token;\n          localStorage.clickedUser = data.user_id\n          localStorage.user_id = data.user_id\n          // this.props.updateUsername(data.user.username);\n          this.props.history.push('/profile');\n        }\n      });\n  };\n\n  handleClick = () => {\n    this.props.history.push(\"/signup\")\n  }\n\n  render() {\n    if(localStorage.token) {\n      this.props.history.push(\"/home\")\n    }\n    return (\n      <div>\n        <form className=\"form-inline\" onSubmit={this.handleSubmit}>\n          <label id=\"label\">Login</label>\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            name=\"username\"\n            onChange={this.handleChange}\n            value={this.state.username}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={this.handleChange}\n            value={this.state.password}\n          />\n          <button type=\"submit\">Submit</button>\n          <a\n            className=\"signup login\"\n            href=\"./signup\"\n            onClick={this.handleClick}\n          >\n            New Here?\n          </a>\n        </form>\n      </div>\n    );\n  }\n}\nexport default LoginPage;\n","import React, { Component, Fragment } from \"react\";\nimport \"../App.css\";\n// import { Link } from \"react-router-dom\";\nimport Review from '../components/Review'\nclass Profile extends Component {\n  state = {\n    myReviews: [],\n  };\n \n\n  showFavorites = () => {\n    return this.props.faveSpots.map(restroom => {\n      return (\n        <div>\n          <li>\n            <h3 className=\"favoritetitle\">{restroom.restroom.name}</h3>\n            <p>{restroom.restroom.address}</p>\n            <p>Restroom Type: {restroom.restroom.restroom_type}</p>\n            <p>\n              Wheelchair Accessible? {restroom.restroom.wheelchair_accessible}\n            </p>\n            <p>\n              Hours: {restroom.restroom.start_time}-{restroom.restroom.end_time}\n            </p>\n            <button\n              onClick={event => {\n                this.props.deleteFave(restroom);\n              }}\n            >\n              Remove\n            </button>\n          </li>\n          <br></br>\n        </div>\n      );\n    });\n  };\n\n  createReview = newReview => {\n    this.setState({\n      myReviews: [...this.state.myReviews, newReview]\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"user-info\">\n        <div className=\"profile-header\">\n          <h3 className=\"faves-heading\">My Go To List</h3>\n          <div className=\"my-faves\">\n            {this.props.username ? `Welcome, ${this.props.username}!` : null}\n            <ul className=\"favorites\">\n              <h3>{this.showFavorites()}</h3>\n            </ul>\n          </div>\n          <Review\n            createReview={this.createReview}\n            myReviews={this.state.myReviews}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n\n// If login is implemented\n// componentDidMount() {\n  //   fetch(`http://localhost:3000/users/${localStorage.user_id}`, {\n  //     method: \"GET\",\n  //     headers: {\n  //         'Content-Type': 'application/json',\n  //         'Accepts': 'application/json',\n  //         'Authorization': localStorage.token\n  //     }\n  //   }\n  //   )\n  //     .then(resp => resp.json())\n  //     .then(data => {\n  //         console.log(localStorage.clickedUser)\n  //         console.log(data)\n  //         this.setState({   \n  //         user: data,\n  //         current_id:data.id\n  //     })}\n  //     )\n  //   if (!localStorage.token) {\n  //     this.props.history.push(\"/login\");\n  //   }\n  // }","export default [\n  {\n    featureType: \"administrative\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#6195a0\"\n      }\n    ]\n  },\n  {\n    featureType: \"administrative.province\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        visibility: \"off\"\n      }\n    ]\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        lightness: \"0\"\n      },\n      {\n        saturation: \"0\"\n      },\n      {\n        color: \"#f5f5f2\"\n      },\n      {\n        gamma: \"1\"\n      }\n    ]\n  },\n  {\n    featureType: \"landscape.man_made\",\n    elementType: \"all\",\n    stylers: [\n      {\n        lightness: \"-3\"\n      },\n      {\n        gamma: \"1.00\"\n      }\n    ]\n  },\n  {\n    featureType: \"landscape.natural.terrain\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\"\n      }\n    ]\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\"\n      }\n    ]\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#bae5ce\"\n      },\n      {\n        visibility: \"on\"\n      }\n    ]\n  },\n  {\n    featureType: \"road\",\n    elementType: \"all\",\n    stylers: [\n      {\n        saturation: -100\n      },\n      {\n        lightness: 45\n      },\n      {\n        visibility: \"simplified\"\n      }\n    ]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"simplified\"\n      }\n    ]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#fac9a9\"\n      },\n      {\n        visibility: \"simplified\"\n      }\n    ]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        color: \"#4e4e4e\"\n      }\n    ]\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#787878\"\n      }\n    ]\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\"\n      }\n    ]\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"simplified\"\n      }\n    ]\n  },\n  {\n    featureType: \"transit.station.airport\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        hue: \"#0a00ff\"\n      },\n      {\n        saturation: \"-77\"\n      },\n      {\n        gamma: \"0.57\"\n      },\n      {\n        lightness: \"0\"\n      }\n    ]\n  },\n  {\n    featureType: \"transit.station.rail\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#43321e\"\n      }\n    ]\n  },\n  {\n    featureType: \"transit.station.rail\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        hue: \"#ff6c00\"\n      },\n      {\n        lightness: \"4\"\n      },\n      {\n        gamma: \"0.75\"\n      },\n      {\n        saturation: \"-68\"\n      }\n    ]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#eaf6f8\"\n      },\n      {\n        visibility: \"on\"\n      }\n    ]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#c7eced\"\n      }\n    ]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        lightness: \"-49\"\n      },\n      {\n        saturation: \"-53\"\n      },\n      {\n        gamma: \"0.79\"\n      }\n    ]\n  }\n];\n","import React, { Component, useState } from \"react\";\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from 'react-google-maps';\nimport mapStyles from \"./mapStyles\";\n\n  function Map(props) {\n    const [selectedSpot,setSelectedSpot] = useState(null);\n\n    return (\n      <GoogleMap\n        defaultZoom={13.5}\n        defaultCenter={{ lat: 40.700771, lng: -73.987411 }}\n        defaultOptions={{ styles: mapStyles}}\n      >\n        {props.restrooms.map(restroom => (\n          <Marker\n            key={restroom.id}\n            position={{\n              lat: restroom.latitude,\n              lng: restroom.longitude\n            }}\n            onClick={() => {\n              setSelectedSpot(restroom);\n            }}\n            icon={{\n              url: \"/unisex.svg\",\n              scaledSize: new window.google.maps.Size(25, 25)\n            }}\n            animation={window.google.maps.Animation.DROP}\n          />\n        ))}\n\n        {selectedSpot && (\n          <InfoWindow\n            visible={true}\n            position={{\n              lat: parseFloat(selectedSpot.latitude),\n              lng: parseFloat(selectedSpot.longitude)\n            }}\n            onCloseClick={() => {\n              setSelectedSpot(null);\n            }}\n          >\n            <div>\n              <h2>{selectedSpot.name}</h2>\n              <p>{selectedSpot.address}</p>\n              <p>Type: {selectedSpot.restroom_type}</p>\n              <p>Wheelchair Accessible: {selectedSpot.wheelchair_accessible}</p>\n              <p>Hours: {selectedSpot.start_time}-{selectedSpot.end_time}</p>\n              <p>Save it to your selected list? <button onClick={() => {props.addFave(selectedSpot)}}>Yes!</button></p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n  );\n  }\n\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default function HomeMap(props){\n  return (\n    <div className=\"map\">\n      <WrappedMap\n        googleMapURL={\n          `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_API_KEY}`\n        }\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n        restrooms={props.allRestrooms}\n        addFave={props.addFave}\n        hovered={props.hovered}\n      />\n    </div>\n  );\n}\n\n\n\n","import React, { Component } from 'react';\n\nclass RestroomFavorites extends React.Component {\n\n  showFavorites = () => {\n    return this.props.faveSpots.map(restroom => {\n      return (\n        <div>\n          <li>\n            <h3 className=\"favoritetitle\">{restroom.restroom.name}</h3>\n            <p>{restroom.restroom.address}</p>\n            <p>Restroom Type: {restroom.restroom.restroom_type}</p>\n            <p>\n              Wheelchair Accesible? {restroom.restroom.wheelchair_accessible}\n            </p>\n            <p>\n              Hours: {restroom.restroom.start_time}-{restroom.restroom.end_time}\n            </p>\n            <button\n              onClick={event => {\n                this.props.deleteFave(restroom);\n              }}\n            >\n              Remove\n            </button>\n          </li>\n          <br></br>\n        </div>\n      );\n    });\n  };\n\n  render() {\n\n    return (\n      <div className=\"favorites\">\n        <h2 className=\"favorites-title\">My Selected Restrooms</h2>\n        <ul className=\"favorites-list\">{this.showFavorites()}</ul>\n      </div>\n    );\n  }\n}\n\nexport default RestroomFavorites;","import React, { Component } from 'react';\nimport {Card, Button} from 'semantic-ui-react';\n\n\nclass Restroom extends Component {\n  state = {\n    clicked : false\n  };\n\n  handleRestroomClick=()=>{\n    this.setState({\n      clicked:true\n    })\n  }\n  onMouseMove = (event) => {\n    console.log(this.props)\n    this.props.onHover(this.props.restroom)\n  }\n  mapClick= () =>{\n    this.props.showInfo(this.props)\n  }\n  \n  handleClick = ( ) => {\n    console.log(this.props)\n    this.props.addFave(this.props.restroom)\n    // alert(\"Yay you now can view your new saved Restroom on your profile!\")\n  }\n    \n\n  render() {\n    const image = this.state.clicked? this.props.restroom.img :null\n  \n    return (\n      <div>\n        <div className=\"ui card\">\n          <div className=\"content\">\n            <div className=\"header\">\n              <h4 className=\"point\" onMouseMove={this.onMouseMove}>\n                {this.props.restroom.name}\n              </h4>\n            </div>\n            <div className=\"meta\"></div>\n            <div className=\"description\">\n              <p>Address: {this.props.restroom.address}</p>\n              <p>Type: {this.props.restroom.restroom_type}</p>\n              <p>\n                Wheelchair Accessible?{\" \"}\n                {this.props.restroom.wheelchair_accessible}\n              </p>\n              <p>Hours: {this.props.restroom.start_time} to {this.props.restroom.end_time}</p>\n            </div>\n            <button\n              className=\"ui vertical animated button\"\n              onClick={this.handleClick}\n            >\n              <div className=\"hidden content\">Add</div>\n              <div className=\"visible content\">\n                <i aria-hidden=\"true\" className=\"favorite icon\"></i>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default Restroom;\n\n{/* <div className=\"restrooms-style\">\n  <h4 className=\"point\" onMouseMove={this.onMouseMove}>\n    {this.props.restroom.name}\n  </h4>\n  <button onClick={this.handleClick}>Add this! </button>\n  <h5> Type: {this.props.restroom.restroom_type} </h5>\n  <h5> Wheelchair Accessible? {this.props.restroom.wheelchair_accesible}</h5>\n  <br></br>\n</div>; */}","import React, { Component } from 'react';\n// import { MDBContainer, MDBInput } from \"mdbreact\";\nclass Filter extends Component {\n    state = {\n        value: '',\n        radioButton: false,\n    }\n  \n\n    handleChange = e => {\n        this.setState({value : e.target.value})\n    }\n\n    onClickButton = e => {\n        if(e.target.checked && !this.state.radioButton){\n            this.setState({radioButton:true})\n        }\n        else if(e.target.checked && this.state.radioButton){\n            this.setState({radioButton:false})\n        }\n    }\n\n    render() {\n        return (\n          <div className=\"filter-list\">\n            <h3>Filter By:</h3>\n            <label className=\"sort\">\n              <input\n                type=\"radio\"\n                onClick={this.onClickButton}\n                value=\"All\"\n                name=\"name\"\n                checked={this.props.sortTerm === \"All\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              All\n            </label>\n            <label className=\"sort\">\n              <input\n                type=\"radio\"\n                className=\"sort\"\n                name=\"name\"\n                value=\"public\"\n                checked={this.props.sortTerm === \"public\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              Public\n            </label>\n            <label className=\"sort\">\n              <input\n                type=\"radio\"\n                className=\"sort\"\n                name=\"name\"\n                value=\"coffee shop\"\n                checked={this.props.sortTerm === \"coffee shop\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              Coffee Shop\n            </label>\n            <label className=\"sort\">\n              <input\n                type=\"radio\"\n                className=\"sort\"\n                name=\"name\"\n                value=\"book store\"\n                checked={this.props.sortTerm === \"book store\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              Book Store\n            </label>\n            <label className=\"sort\">\n              <input\n                type=\"radio\"\n                className=\"sort\"\n                name=\"name\"\n                value=\"hotel\"\n                checked={this.props.sortTerm === \"hotel\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              Hotel\n            </label>\n            <label className=\"sort\">\n              <input\n                type=\"radio\"\n                className=\"sort\"\n                name=\"name\"\n                value=\"fast food\"\n                checked={this.props.sortTerm === \"fast food\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              Fast Food\n            </label>\n            <label className=\"sort\">\n              <input\n                type=\"radio\"\n                className=\"sort\"\n                name=\"name\"\n                value=\"department store\"\n                checked={this.props.sortTerm === \"department store\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              Department Store\n            </label>\n            <label className=\"sort\">\n              <input\n                type=\"radio\"\n                className=\"sort\"\n                name=\"name\"\n                value=\"other\"\n                checked={this.props.sortTerm === \"other\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              Other\n            </label>\n            <label className=\"sort\">\n              <input\n                type=\"checkbox\"\n                className=\"sort\"\n                name=\"name\"\n                value=\"Yes\"\n                checked={this.props.sortTerm === \"Yes\" ? true : \"\"}\n                onChange={event => this.props.setSortTerm(event.target.value)}\n              />\n              Wheelchair Accessible\n            </label>\n            <br />\n          </div>\n        );\n    }\n}\nexport default Filter;\n\n","import React, { Component } from 'react';\nimport HomeMap from '../components/HomeMap';\nimport RestroomFavorites from '../components/RestroomFavorites';\nimport Restroom from '../components/Restroom';\nimport Filter from '../components/Filter';\n\nclass Home extends Component {\n  state = {\n    xcoordinate: 40.700771,\n    ycoordinate: -73.987411,\n    allRestrooms: [],\n    filterTerm: \"\",\n    hovered: null,\n    sortTerm: \"All\",\n    selectedMarker: \"\",\n    favoriteSpot: [],\n    userAddress:'',\n    currentProfile: null,\n    myFaves: []\n  };\n\n  componentDidMount() {\n    // fetch(`http://localhost:3000/restrooms`)\n    fetch(\"https://nyc-restrooms-locator-backend.herokuapp.com/restrooms\")\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          allRestrooms: data\n        });\n      });\n  }\n\n  setSortTerm = term => {\n    this.setState({\n      sortTerm: term\n    });\n  };\n  showInfo = selectedMarker => {\n    this.setState({ selectedMarker: selectedMarker });\n    console.log(this.state.selectedMarker);\n  };\n\n  handleHover = restroom => {\n    console.log(restroom);\n    this.setState({\n      hovered: restroom.name\n    });\n  };\n\n  filterSpot = () => {\n    let filteredRestrooms = [...this.state.allRestrooms];\n    // Filtering the spots according to type\n    if (this.state.sortTerm === \"All\") {\n      filteredRestrooms = [...this.state.allRestrooms];\n    } else if (this.state.sortTerm === \"public\") {\n      filteredRestrooms = filteredRestrooms.filter(\n        restroom => restroom.restroom_type === this.state.sortTerm\n      );\n    } else if (this.state.sortTerm === \"coffee shop\") {\n      filteredRestrooms = filteredRestrooms.filter(\n        restroom => restroom.restroom_type === this.state.sortTerm\n      );\n    } else if (this.state.sortTerm === \"hotel\") {\n      filteredRestrooms = filteredRestrooms.filter(\n        restroom => restroom.restroom_type === this.state.sortTerm\n      );\n    } else if (this.state.sortTerm === \"book store\") {\n      filteredRestrooms = filteredRestrooms.filter(\n        restroom => restroom.restroom_type === this.state.sortTerm\n      );\n    } else if (this.state.sortTerm === \"fast food\") {\n      filteredRestrooms = filteredRestrooms.filter(\n        restroom => restroom.restroom_type === this.state.sortTerm\n      );\n    }  else if (this.state.sortTerm === \"department store\") {\n      filteredRestrooms = filteredRestrooms.filter(\n        restroom => restroom.restroom_type === this.state.sortTerm\n      );\n    }\n      else if (this.state.sortTerm === \"other\") {\n      filteredRestrooms = filteredRestrooms.filter(\n        restroom => restroom.restroom_type === this.state.sortTerm\n      );\n    } else if (this.state.sortTerm === \"Yes\") {\n      filteredRestrooms = filteredRestrooms.filter(\n        restroom => restroom.wheelchair_accessible === this.state.sortTerm\n      );\n    };\n    return filteredRestrooms.map(restroom => {\n      return (\n        <Restroom\n          key={restroom.id}\n          showInfo={this.showInfo}\n          restroom={restroom}\n          onHover={this.handleHover}\n          addFave={this.props.addFave}\n        />\n      );\n    });\n  };\n\n  render() {\n    console.log(this.state.sortTerm);\n    return (\n      <div className=\"home\">\n        {/* <h2 className=\"slogan\">A piece of mind from a click away</h2> */}\n        <br></br>\n        <div className=\"home-map\">\n          <HomeMap\n            coordinates={{\n              lat: this.state.xcoordinate,\n              lng: this.state.ycoordinate\n            }}\n            allRestrooms={this.state.allRestrooms}\n            selectedMarker={this.state.selectedMarker}\n            onHover={this.handleHover}\n            hovered={this.state.hovered}\n            addFave={this.props.addFave}\n            userAddress={this.state.userAddress}\n          />\n\n          <div className=\"restroom-faves\">\n            <RestroomFavorites\n              onHover={this.handleHover}\n              faveSpots={this.props.faveSpots}\n              deleteFave={this.props.deleteFave}\n              myFaves={this.props.myFaves}\n            />\n          </div>\n        </div>\n        <div className=\"result-container\">\n          <div className=\"filter\">\n            <Filter\n              setFilterTerm={this.setFilterTerm}\n              sortTerm={this.state.sortTerm}\n              term={this.state.filterTerm}\n              setSortTerm={this.setSortTerm}\n            />\n          </div>\n          <div className=\"restroomlist\">\n            <div class=\"ui four column grid\">\n              <div class=\"row\">{this.filterSpot()}\n              </div>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"about\">\n                <p>\n                    Have you ever wondered where are all the free restrooms when you're just hanging out in the city? Your first thought is to go to Starbucks and then realize you have to wait on a long line just to buy something small and expensive. Frustrating right? Rest assured, this website will help you decide where to \n                    go to find the nearest restroom of your choice! You can filter by type on the list below on the home page and add it to your favorite list or by selecting the specific marker on the map.\n                </p>\n                <p>   \n                    After you add your restrooms to visit, it shows up on the top of your Profile page. Please make a review of your experience using the restroom below. Thanks! \n                </p>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Pages from './pages';\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\"\nimport About from \"./pages/About\"\n// styling\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    xcoordinate: 40.700771,\n    ycoordinate: -73.987411,\n    allRestrooms: [],\n    page: \"login\",\n    name: \"\",\n    faveSpots: []\n  };\n\n  redirect = page => {\n    this.setState({ page: page });\n  };\n\n  addFave = spot => {\n    if (!this.state.faveSpots.includes(spot)) {\n      // fetch(\"http://localhost:3000/favorites\", {\n        fetch(\"https://nyc-restrooms-locator-backend.herokuapp.com/favorites\",{\n        method: \"POST\",\n        headers: {\n          Accepts: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: 3,\n          restroom_id: spot.id\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          this.setState({\n            faveSpots: [...this.state.faveSpots, data]\n          });\n        });\n    }\n  };\n\n  deleteFave = favorite => {\n    console.log(favorite);\n    // fetch(`http://localhost:3000/favorites/${favorite.id}`, {\n      fetch(`https://nyc-restrooms-locator-backend.herokuapp.com/${favorite.id}`,{\n      method: \"DELETE\"\n    }).then(() => {\n      const updatedSpots = this.state.faveSpots.filter(aSpot => {\n        return aSpot.id !== favorite.id;\n      });\n      this.setState({\n        faveSpots: updatedSpots\n      });\n    });\n  };\n \n\n  render() {\n    let faveSpots= this.state.faveSpots;\n    console.log(faveSpots)\n    return (\n      <div className=\"app\">\n        <NavBar />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={routerProps => (\n              <Home\n                faveSpots={faveSpots}\n                deleteFave={this.deleteFave}\n                addFave={this.addFave}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/about\"\n            render={routerProps => (\n              <About\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/profile\"\n            render={routerProps => (\n              <Profile\n                {...routerProps}\n                faveSpots={faveSpots}\n                addFave={this.addFave}\n                deleteFave={this.deleteFave}\n              />\n            )}\n          />\n        </Switch>\n        <div className=\"bottom bar\">Made by fellow Glorious Pegasus: Kevin Wang</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render((<BrowserRouter><App /></BrowserRouter>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}